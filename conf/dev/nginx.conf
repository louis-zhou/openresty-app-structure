user root owner;
worker_processes  auto;

env  ENV_CONF_VALUE;

error_log  logs/error.log  info;

events {
	#use epoll;
	multi_accept on;
	worker_connections  1024;
}

http {
	lua_shared_dict cluster_cache_dict 2m;

	#include       mime.types;
	default_type  application/octet-stream;

	log_format  main  '$proxy_add_x_forwarded_for - $remote_user [$time_local] "$request" '
		'$status $body_bytes_sent "$http_referer" '
		'"$http_user_agent" $request_time';

	sendfile        on;
	tcp_nopush     on;
	client_max_body_size 5m;
	keepalive_timeout  65;

	gzip  on;
	gzip_min_length  1k;
	gzip_buffers     4 16k;
	gzip_http_version 1.0;
	gzip_comp_level 2;
	gzip_types       text/plain application/x-javascript text/css application/xml application/json;
	gzip_vary on;
    
    resolver 10.185.240.85;
    
	lua_code_cache off;
 
    lua_package_path    '$prefix/conf/?.lua;$prefix/lua/?.lua;$prefix/lua/?/init.lua;$prefix/lualib/?.lua;$prefix/lualib/?/init.lua;;';
	lua_package_cpath   '$prefix/lua/?.so;$prefix/lualib/?.so;;';


	server {
		listen       80; 

		server_name 127.0.0.1 localhost;
		access_log  logs/localhost.access.log  main;
 
		location / {
			root   html;
			index  index.html index.htm;
		}

		location =/lua {
			default_type text/plain;
			content_by_lua 'ngx.say("hello,lua")';
		}
		
		error_page  404              /404.html;

		error_page   500 502 503 504  /50x.html;
		location = /50x.html {
			root   html;
		}
	}
}
